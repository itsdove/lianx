<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.lianx.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.example.lianx.entity.User">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="activation_code" jdbcType="VARCHAR" property="activationCode" />
    <result column="header_url" jdbcType="VARCHAR" property="headerUrl" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>

  <sql id="insertFields">
    username, password, salt, email, type, status, activation_code, header_url, create_time
  </sql>

  <sql id="selectFields">
    id, username, password, salt, email, type, status, activation_code, header_url, create_time
  </sql>

  <select id="selectById" resultType="com.example.lianx.entity.User">
    select <include refid="selectFields"></include>
    from user
    where id = #{id}
  </select>

  <select id="selectByName" resultType="com.example.lianx.entity.User">
    select <include refid="selectFields"></include>
    from user
    where username=#{username}
  </select>

  <select id="selectByEmail" resultType="com.example.lianx.entity.User">
    select <include refid="selectFields"></include>
    from user
    where  email=#{email}
  </select>

  <insert id="insertUser" parameterType="com.example.lianx.entity.User" keyProperty="id">
    insert into user (<include refid="insertFields"></include>)
    values(#{username}, #{password}, #{salt}, #{email}, #{type}, #{status}, #{activationCode}, #{headerUrl}, #{createTime})
  </insert>

  <update id="updateStatus">
    update user set status = #{i} where id = #{userId}
  </update>

  <update id="updateHeader">
    update user set header_url = #{headerUrl} where id = #{userId}
  </update>

  <update id="updatePassword">
    update user set password = #{password} where id = #{userId}
  </update>


</mapper>